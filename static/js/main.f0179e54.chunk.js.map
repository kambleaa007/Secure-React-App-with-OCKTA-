{"version":3,"sources":["common/img/secure.jpg","components/Home.jsx","components/SignInForm.jsx","components/SignIn.jsx","components/Protected.jsx","components/AppWithRouterAccess.jsx","App.js","reportWebVitals.js","index.js"],"names":["Home","useOktaAuth","authState","oktaAuth","history","useHistory","button","isAuthenticated","Button","onClick","signOut","push","Container","Row","Col","md","Navbar","bg","variant","Brand","Nav","className","Link","as","to","src","require","SignInForm","useState","sessionToken","setSessionToken","username","setUsername","password","setPassword","onSubmit","e","preventDefault","signInWithCredentials","then","res","signInWithRedirect","catch","err","console","log","id","type","value","onChange","target","SignIn","pathname","Protected","basename","window","location","exact","path","AppWithRouterAccess","OktaAuth","issuer","clientId","redirectUri","origin","onAuthRequired","pkce","restoreOriginalUri","_oktaAuth","originalUri","a","replace","toRelativeUrl","component","render","LoginCallback","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0179e54.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/secure.3bf08c94.jpg\";","import React from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useOktaAuth } from '@okta/okta-react';\r\nimport { Container, Row, Col, Navbar, Nav, Button } from 'react-bootstrap';\r\n\r\nconst Home = () => {\r\n  const { authState, oktaAuth } = useOktaAuth();\r\n  const history = useHistory();\r\n\r\n  if (!authState) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const button = authState.isAuthenticated ?\r\n    <Button onClick={() => {oktaAuth.signOut()}}>Logout</Button> :\r\n    <Button onClick={() => {history.push('/login')}}>Login</Button>;\r\n\r\n  return (\r\n    <div>      \r\n      <Container>\r\n        <div >\r\n        <Row>\r\n          <Col md={10}>\r\n            <Navbar bg=\"primary\" variant=\"dark\">\r\n              <Container>\r\n                <Navbar.Brand>Ockta React App</Navbar.Brand>\r\n                <Nav className=\"me-auto\">\r\n                  <Nav.Link as={Link} to='/' >Home</Nav.Link>\r\n                  <Nav.Link as={Link} to='/protected'>Protected</Nav.Link>\r\n                </Nav>\r\n              </Container>\r\n            </Navbar>\r\n          </Col>\r\n          <Col md={2}>\r\n            {button}\r\n          </Col>        \r\n        </Row>\r\n        <Row>\r\n          <Col md={10}>\r\n            <p>hello</p>\r\n            <img src={require('./../common/img/secure.jpg')} />\r\n          </Col>\r\n        </Row>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","import React, { useState } from 'react';\r\nimport { useOktaAuth } from '@okta/okta-react';\r\n\r\nconst SignInForm = () => {\r\n  const { oktaAuth } = useOktaAuth();\r\n  const [sessionToken, setSessionToken] = useState();\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    oktaAuth.signInWithCredentials({ username, password })\r\n    .then(res => {\r\n      const sessionToken = res.sessionToken;\r\n      setSessionToken(sessionToken);\r\n      // sessionToken is a one-use token, so make sure this is only called once\r\n      oktaAuth.signInWithRedirect({ sessionToken });\r\n    })\r\n    .catch(err => console.log('Found an error', err));\r\n  };\r\n\r\n  const handleUsernameChange = (e) => {\r\n    setUsername(e.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  if (sessionToken) {\r\n    // Hide form while sessionToken is converted into id/access tokens\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        Username:\r\n        <input\r\n          id=\"username\" type=\"text\"\r\n          value={username}\r\n          onChange={handleUsernameChange} />\r\n      </label>\r\n      <label>\r\n        Password:\r\n        <input\r\n          id=\"password\" type=\"password\"\r\n          value={password}\r\n          onChange={handlePasswordChange} />\r\n      </label>\r\n      <input id=\"submit\" type=\"submit\" value=\"Submit\" />\r\n    </form>\r\n  );\r\n};\r\nexport default SignInForm;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport SignInForm from './SignInForm';\r\nimport { useOktaAuth } from '@okta/okta-react';\r\n\r\nconst SignIn = () => {\r\n  const { authState } = useOktaAuth();\r\n\r\n  if (!authState) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  return authState.isAuthenticated ?\r\n    <Redirect to={{ pathname: '/' }}/> :\r\n    <SignInForm />;\r\n};\r\n\r\nexport default SignIn;\r\n","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useParams,\r\n    useRouteMatch\r\n  } from \"react-router-dom\";\r\n\r\nconst Protected = () => {\r\n    return(\r\n        <div>\r\n            <Router basename={window.location.pathname || ''}>\r\n            <div>\r\n                <ul>\r\n                <li>\r\n                    <Link to=\"/protected/\">Home</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/protected/topics\">Topics</Link>\r\n                </li>\r\n                </ul>\r\n\r\n                <hr />\r\n\r\n                <Switch>\r\n                <Route exact path=\"/protected/\">\r\n                    <h1>HOME</h1>\r\n                </Route>\r\n                <Route path=\"/protected/topics\">\r\n                    <h1>TOPICS</h1>\r\n                </Route>\r\n                </Switch>\r\n            </div>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Protected;\r\n","import React from 'react';\r\nimport { Route, useHistory } from 'react-router-dom';\r\nimport { Security, SecureRoute, LoginCallback } from '@okta/okta-react';\r\nimport { OktaAuth, toRelativeUrl } from '@okta/okta-auth-js';\r\nimport Home from './Home';\r\nimport SignIn from './SignIn';\r\nimport Protected from './Protected';\r\n\r\nconst AppWithRouterAccess = () => {\r\n  const history = useHistory();\r\n  const onAuthRequired = () => {\r\n    history.push('/login');\r\n  };\r\n\r\n  const oktaAuth = new OktaAuth({\r\n    issuer: 'https://dev-75857184.okta.com/oauth2/default',\r\n    clientId: '0oa1fa7pslgB4hUiz5d7',\r\n    redirectUri: window.location.origin + '/login/callback',\r\n    onAuthRequired: onAuthRequired,\r\n    pkce: true\r\n  });\r\n\r\n  const restoreOriginalUri = async (_oktaAuth, originalUri) => {\r\n    history.replace(toRelativeUrl(originalUri, window.location.origin));\r\n  };\r\n\r\n  return (\r\n    <Security oktaAuth={oktaAuth} restoreOriginalUri={restoreOriginalUri} basename={window.location.pathname || ''}>\r\n      <Route path='/' exact={true} component={Home} />\r\n      <SecureRoute path='/protected' component={Protected} />\r\n      <Route path='/login' render={() => <SignIn />} />\r\n      <Route path='/login/callback' component={LoginCallback} />\r\n    </Security>\r\n  );\r\n};\r\nexport default AppWithRouterAccess;\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\n\r\nimport React from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport AppWithRouterAccess from './components/AppWithRouterAccess';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <AppWithRouterAccess/>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}